// <auto-generated />
using System;
using AplikacjaWedkarska.Api.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AplikacjaWedkarska.Api.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AplikacjaWedkarska.Api.Entities.AccountEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CardID")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Password")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RoleID")
                        .HasColumnType("int");

                    b.Property<string>("Surname")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CardID");

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3562b6fb-8bac-4897-b542-d5cefc3fc123"),
                            CardID = new Guid("2ef422ae-0e8e-4f47-93bb-8b79f04123b6"),
                            DateCreated = new DateTime(2023, 10, 16, 11, 44, 54, 724, DateTimeKind.Local).AddTicks(608),
                            DateOfBirth = new DateTime(2000, 11, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "agraba@cos.nie",
                            IsDeleted = false,
                            Name = "Artur",
                            Password = "jGl25bVBBBW96Qi9Te4V37Fnqchz/Eu4qB9vKrRIqRg=",
                            RoleID = 2,
                            Surname = "Graba"
                        },
                        new
                        {
                            Id = new Guid("93e7f1d2-7bf9-4531-af27-57647447cb19"),
                            CardID = new Guid("3aad22ae-0e3e-4247-93bb-8b79f04123b6"),
                            DateCreated = new DateTime(2023, 10, 16, 11, 44, 54, 724, DateTimeKind.Local).AddTicks(737),
                            DateOfBirth = new DateTime(2002, 11, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "jdyrdul@cos.nie",
                            IsDeleted = false,
                            Name = "Jan",
                            Password = "jGl25bVBBBW96Qi9Te4V37Fnqchz/Eu4qB9vKrRIqRg=",
                            RoleID = 1,
                            Surname = "Dyrduł"
                        });
                });

            modelBuilder.Entity("AplikacjaWedkarska.Api.Entities.CardEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<bool>("Lowland1Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Mountain1Active")
                        .HasColumnType("bit");

                    b.Property<bool>("Mountain2Active")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Cards");

                    b.HasData(
                        new
                        {
                            Id = new Guid("2ef422ae-0e8e-4f47-93bb-8b79f04123b6"),
                            DateCreated = new DateTime(2023, 10, 16, 11, 44, 54, 724, DateTimeKind.Local).AddTicks(518),
                            DateModified = new DateTime(2023, 10, 16, 11, 44, 54, 724, DateTimeKind.Local).AddTicks(524),
                            Lowland1Active = false,
                            Mountain1Active = false,
                            Mountain2Active = false
                        },
                        new
                        {
                            Id = new Guid("3aad22ae-0e3e-4247-93bb-8b79f04123b6"),
                            DateCreated = new DateTime(2023, 10, 16, 11, 44, 54, 724, DateTimeKind.Local).AddTicks(535),
                            DateModified = new DateTime(2023, 10, 16, 11, 44, 54, 724, DateTimeKind.Local).AddTicks(539),
                            Lowland1Active = false,
                            Mountain1Active = false,
                            Mountain2Active = false
                        });
                });

            modelBuilder.Entity("AplikacjaWedkarska.Api.Entities.RoleEntity", b =>
                {
                    b.Property<int>("RoleID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleID"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleID");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            RoleID = 1,
                            Name = "user"
                        },
                        new
                        {
                            RoleID = 2,
                            Name = "controller"
                        });
                });

            modelBuilder.Entity("AplikacjaWedkarska.Api.Entities.AccountEntity", b =>
                {
                    b.HasOne("AplikacjaWedkarska.Api.Entities.CardEntity", "Card")
                        .WithMany()
                        .HasForeignKey("CardID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });
#pragma warning restore 612, 618
        }
    }
}
